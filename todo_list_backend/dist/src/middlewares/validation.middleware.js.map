{"version":3,"sources":["../../../src/middlewares/validation.middleware.ts"],"sourcesContent":["import { plainToClass } from 'class-transformer';\r\nimport { validate, ValidationError } from 'class-validator';\r\nimport { RequestHandler } from 'express';\r\nimport { HttpException } from '@exceptions/HttpException';\r\n\r\nconst validationMiddleware = (\r\n    type: any,\r\n    value: string | 'body' | 'query' | 'params' = 'body',\r\n    skipMissingProperties = false,\r\n    whitelist = true,\r\n    forbidNonWhitelisted = true,\r\n): RequestHandler => {\r\n    return (req, res, next) => {\r\n        const validatedValue = req[value];\r\n        console.log('Validating:', validatedValue);\r\n\r\n        validate(plainToClass(type, validatedValue), { skipMissingProperties, whitelist, forbidNonWhitelisted })\r\n            .then((errors: ValidationError[]) => {\r\n                console.log('Validation errors:', errors);\r\n                if (errors.length > 0) {\r\n                    const message = errors.map((error: ValidationError) => Object.values(error.constraints)).join(', ');\r\n                    next(new HttpException(400, message));\r\n                } else {\r\n                    next();\r\n                }\r\n            })\r\n            .catch((error: Error) => {\r\n                console.error('Validation error:', error);\r\n                next(new HttpException(500, 'Internal Server Error'));\r\n            });\r\n\r\n        // Add this block to catch any errors that occur after validation\r\n        req.on('error', (err) => {\r\n            console.error('Request error:', err);\r\n            next(new HttpException(500, 'An unexpected error occurred'));\r\n        });\r\n    };\r\n};\r\n\r\nexport default validationMiddleware;\r\n"],"names":["validationMiddleware","type","value","skipMissingProperties","whitelist","forbidNonWhitelisted","req","res","next","validatedValue","console","log","validate","plainToClass","then","errors","length","message","map","error","Object","values","constraints","join","HttpException","catch","on","err"],"mappings":";;;;+BAuCA;;;eAAA;;;kCAvC6B;gCACa;+BAEZ;AAE9B,MAAMA,uBAAuB,CACzBC,MACAC,QAA8C,MAAM,EACpDC,wBAAwB,KAAK,EAC7BC,YAAY,IAAI,EAChBC,uBAAuB,IAAI;IAE3B,OAAO,CAACC,KAAKC,KAAKC;QACd,MAAMC,iBAAiBH,GAAG,CAACJ,MAAM;QACjCQ,QAAQC,GAAG,CAAC,eAAeF;QAE3BG,IAAAA,wBAAQ,EAACC,IAAAA,8BAAY,EAACZ,MAAMQ,iBAAiB;YAAEN;YAAuBC;YAAWC;QAAqB,GACjGS,IAAI,CAAC,CAACC;YACHL,QAAQC,GAAG,CAAC,sBAAsBI;YAClC,IAAIA,OAAOC,MAAM,GAAG,GAAG;gBACnB,MAAMC,UAAUF,OAAOG,GAAG,CAAC,CAACC,QAA2BC,OAAOC,MAAM,CAACF,MAAMG,WAAW,GAAGC,IAAI,CAAC;gBAC9Ff,KAAK,IAAIgB,4BAAa,CAAC,KAAKP;YAChC,OAAO;gBACHT;YACJ;QACJ,GACCiB,KAAK,CAAC,CAACN;YACJT,QAAQS,KAAK,CAAC,qBAAqBA;YACnCX,KAAK,IAAIgB,4BAAa,CAAC,KAAK;QAChC;QAGJlB,IAAIoB,EAAE,CAAC,SAAS,CAACC;YACbjB,QAAQS,KAAK,CAAC,kBAAkBQ;YAChCnB,KAAK,IAAIgB,4BAAa,CAAC,KAAK;QAChC;IACJ;AACJ;MAEA,WAAexB"}