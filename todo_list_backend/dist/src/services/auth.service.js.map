{"version":3,"sources":["../../../src/services/auth.service.ts"],"sourcesContent":["import {compare, hash} from 'bcrypt';\r\nimport {sign} from 'jsonwebtoken';\r\nimport {SECRET_KEY} from '@config';\r\nimport {CreateUserDto} from '@dtos/users.dto';\r\nimport {HttpException} from '@exceptions/HttpException';\r\nimport {DataStoredInToken, TokenData} from '@interfaces/auth.interface';\r\nimport {User} from '@interfaces/users.interface';\r\nimport userModel from '@models/users.model';\r\nimport {isEmpty} from '@utils/util';\r\n\r\nclass AuthService {\r\n    public users = userModel;\r\n\r\n    public async findAllUsers(): Promise<User[]> {\r\n        return this.users.find();\r\n    }\r\n    public async signup(userData: CreateUserDto): Promise<User> {\r\n        if (isEmpty(userData)) throw new HttpException(400, \"userData is empty\");\r\n\r\n        const findUser: User = await this.users.findOne({ email: userData.email });\r\n        if (findUser) throw new HttpException(409, `This email ${userData.email} already exists`);\r\n\r\n        const hashedPassword = await hash(userData.password, 10);\r\n        return await this.users.create({...userData, password: hashedPassword});\r\n    }\r\n\r\n    public async login(userData: CreateUserDto): Promise<{ token: TokenData; findUser: User }> {\r\n        if (isEmpty(userData)) throw new HttpException(400, \"userData is empty\");\r\n\r\n        const findUser: User = await this.users.findOne({ email: userData.email });\r\n        if (!findUser) throw new HttpException(409, `This email ${userData.email} was not found`);\r\n\r\n        const isPasswordMatching: boolean = await compare(userData.password, findUser.password);\r\n        if (!isPasswordMatching) throw new HttpException(409, \"Password is not matching\");\r\n\r\n        const tokenData = this.createToken(findUser);\r\n\r\n        return {token: tokenData, findUser };\r\n    }\r\n\r\n    public async logout(userData: User): Promise<User> {\r\n        if (isEmpty(userData)) throw new HttpException(400, \"userData is empty\");\r\n\r\n        const findUser: User = await this.users.findOne({ email: userData.email, password: userData.password });\r\n        if (!findUser) throw new HttpException(409, `This email ${userData.email} was not found`);\r\n\r\n        return findUser;\r\n    }\r\n\r\n    public createToken(user: User): TokenData {\r\n        const dataStoredInToken: DataStoredInToken = { _id: user._id };\r\n        const secretKey: string = SECRET_KEY;\r\n        const expiresIn: number = 60 * 60 * 24;\r\n\r\n        return { expiresIn, token: sign(dataStoredInToken, secretKey, { expiresIn }) };\r\n    }\r\n\r\n    public createCookie(tokenData: TokenData): string {\r\n        return `Authorization=${tokenData.token}; HttpOnly; Max-Age=${tokenData.expiresIn};`;\r\n    }\r\n}\r\n\r\nexport default AuthService;"],"names":["compare","hash","sign","SECRET_KEY","HttpException","userModel","isEmpty","AuthService","users","findAllUsers","find","signup","userData","findUser","hashedPassword","findOne","email","password","create","login","isPasswordMatching","tokenData","createToken","token","logout","user","dataStoredInToken","_id","secretKey","expiresIn","createCookie"],"mappings":"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"}