{"version":3,"sources":["../../../src/services/auth.service.ts"],"sourcesContent":["import {compare, hash} from 'bcrypt';\r\nimport {sign} from 'jsonwebtoken';\r\nimport {SECRET_KEY} from '@config';\r\nimport {CreateUserDto} from '@dtos/users.dto';\r\nimport {HttpException} from '@exceptions/HttpException';\r\nimport {DataStoredInToken, TokenData} from '@interfaces/auth.interface';\r\nimport {User} from '@interfaces/users.interface';\r\nimport userModel from '@models/users.model';\r\nimport {isEmpty} from '@utils/util';\r\n\r\nclass AuthService {\r\n    public users = userModel;\r\n\r\n    public async findAllUsers(): Promise<User[]> {\r\n        return this.users.find();\r\n    }\r\n    public async signup(userData: CreateUserDto): Promise<User> {\r\n        if (isEmpty(userData)) throw new HttpException(400, \"userData is empty\");\r\n\r\n        const findUser: User = await this.users.findOne({ email: userData.email });\r\n        if (findUser) throw new HttpException(409, `This email ${userData.email} already exists`);\r\n\r\n        const hashedPassword = await hash(userData.password, 10);\r\n        return await this.users.create({...userData, password: hashedPassword});\r\n    }\r\n\r\n    public async login(userData: CreateUserDto): Promise<{ token: TokenData; findUser: User }> {\r\n        if (isEmpty(userData)) throw new HttpException(400, \"userData is empty\");\r\n\r\n        const findUser: User = await this.users.findOne({ email: userData.email });\r\n        if (!findUser) throw new HttpException(409, `This email ${userData.email} was not found`);\r\n\r\n        const isPasswordMatching: boolean = await compare(userData.password, findUser.password);\r\n        if (!isPasswordMatching) throw new HttpException(409, \"Password is not matching\");\r\n\r\n        const tokenData = this.createToken(findUser);\r\n\r\n        return {token: tokenData, findUser };\r\n    }\r\n\r\n    public async logout(userData: User): Promise<User> {\r\n        if (isEmpty(userData)) throw new HttpException(400, \"userData is empty\");\r\n\r\n        const findUser: User = await this.users.findOne({ email: userData.email, password: userData.password });\r\n        if (!findUser) throw new HttpException(409, `This email ${userData.email} was not found`);\r\n\r\n        return findUser;\r\n    }\r\n\r\n    public createToken(user: User): TokenData {\r\n        const dataStoredInToken: DataStoredInToken = { _id: user._id };\r\n        const secretKey: string = SECRET_KEY;\r\n        const expiresIn: number = 60 * 60 * 24;\r\n\r\n        return { expiresIn, token: sign(dataStoredInToken, secretKey, { expiresIn }) };\r\n    }\r\n\r\n    public createCookie(tokenData: TokenData): string {\r\n        return `Authorization=${tokenData.token}; HttpOnly; Max-Age=${tokenData.expiresIn};`;\r\n    }\r\n}\r\n\r\nexport default AuthService;"],"names":["AuthService","findAllUsers","users","find","signup","userData","isEmpty","HttpException","findUser","findOne","email","hashedPassword","hash","password","create","login","isPasswordMatching","compare","tokenData","createToken","token","logout","user","dataStoredInToken","_id","secretKey","SECRET_KEY","expiresIn","sign","createCookie","userModel"],"mappings":";;;;+BA8DA;;;eAAA;;;wBA9D4B;8BACT;wBACM;+BAEG;mEAGN;sBACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEtB,IAAA,AAAMA,cAAN,MAAMA;IAGF,MAAaC,eAAgC;QACzC,OAAO,IAAI,CAACC,KAAK,CAACC,IAAI;IAC1B;IACA,MAAaC,OAAOC,QAAuB,EAAiB;QACxD,IAAIC,IAAAA,aAAO,EAACD,WAAW,MAAM,IAAIE,4BAAa,CAAC,KAAK;QAEpD,MAAMC,WAAiB,MAAM,IAAI,CAACN,KAAK,CAACO,OAAO,CAAC;YAAEC,OAAOL,SAASK,KAAK;QAAC;QACxE,IAAIF,UAAU,MAAM,IAAID,4BAAa,CAAC,KAAK,CAAC,WAAW,EAAEF,SAASK,KAAK,CAAC,eAAe,CAAC;QAExF,MAAMC,iBAAiB,MAAMC,IAAAA,YAAI,EAACP,SAASQ,QAAQ,EAAE;QACrD,OAAO,MAAM,IAAI,CAACX,KAAK,CAACY,MAAM,CAAC,wCAAIT;YAAUQ,UAAUF;;IAC3D;IAEA,MAAaI,MAAMV,QAAuB,EAAiD;QACvF,IAAIC,IAAAA,aAAO,EAACD,WAAW,MAAM,IAAIE,4BAAa,CAAC,KAAK;QAEpD,MAAMC,WAAiB,MAAM,IAAI,CAACN,KAAK,CAACO,OAAO,CAAC;YAAEC,OAAOL,SAASK,KAAK;QAAC;QACxE,IAAI,CAACF,UAAU,MAAM,IAAID,4BAAa,CAAC,KAAK,CAAC,WAAW,EAAEF,SAASK,KAAK,CAAC,cAAc,CAAC;QAExF,MAAMM,qBAA8B,MAAMC,IAAAA,eAAO,EAACZ,SAASQ,QAAQ,EAAEL,SAASK,QAAQ;QACtF,IAAI,CAACG,oBAAoB,MAAM,IAAIT,4BAAa,CAAC,KAAK;QAEtD,MAAMW,YAAY,IAAI,CAACC,WAAW,CAACX;QAEnC,OAAO;YAACY,OAAOF;YAAWV;QAAS;IACvC;IAEA,MAAaa,OAAOhB,QAAc,EAAiB;QAC/C,IAAIC,IAAAA,aAAO,EAACD,WAAW,MAAM,IAAIE,4BAAa,CAAC,KAAK;QAEpD,MAAMC,WAAiB,MAAM,IAAI,CAACN,KAAK,CAACO,OAAO,CAAC;YAAEC,OAAOL,SAASK,KAAK;YAAEG,UAAUR,SAASQ,QAAQ;QAAC;QACrG,IAAI,CAACL,UAAU,MAAM,IAAID,4BAAa,CAAC,KAAK,CAAC,WAAW,EAAEF,SAASK,KAAK,CAAC,cAAc,CAAC;QAExF,OAAOF;IACX;IAEOW,YAAYG,IAAU,EAAa;QACtC,MAAMC,oBAAuC;YAAEC,KAAKF,KAAKE,GAAG;QAAC;QAC7D,MAAMC,YAAoBC,kBAAU;QACpC,MAAMC,YAAoB,KAAK,KAAK;QAEpC,OAAO;YAAEA;YAAWP,OAAOQ,IAAAA,kBAAI,EAACL,mBAAmBE,WAAW;gBAAEE;YAAU;QAAG;IACjF;IAEOE,aAAaX,SAAoB,EAAU;QAC9C,OAAO,CAAC,cAAc,EAAEA,UAAUE,KAAK,CAAC,oBAAoB,EAAEF,UAAUS,SAAS,CAAC,CAAC,CAAC;IACxF;;QAhDA,uBAAOzB,SAAQ4B,mBAAS;;AAiD5B;MAEA,WAAe9B"}