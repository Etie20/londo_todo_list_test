{"version":3,"sources":["../../../src/services/category.service.ts"],"sourcesContent":["import { Base } from \"@/interfaces/base.interface\";\r\nimport CategoryModel from \"@models/category.model\";\r\nimport {CreateBaseDto} from \"@dtos/state.dto\";\r\nimport {isEmpty} from \"class-validator\";\r\nimport {HttpException} from \"@exceptions/HttpException\";\r\n\r\nclass CategoryService {\r\n    public category = CategoryModel;\r\n\r\n    public async findAllCategories(): Promise<Base[]> {\r\n        return this.category.find();\r\n    }\r\n\r\n    public async createCategory(categoryData: CreateBaseDto): Promise<Base> {\r\n        if (isEmpty(categoryData)) throw new HttpException(400, \"categoryData is empty\");\r\n        return this.category.create({...categoryData})\r\n    }\r\n}\r\n\r\nexport default CategoryService;"],"names":["CategoryService","findAllCategories","category","find","createCategory","categoryData","isEmpty","HttpException","create","CategoryModel"],"mappings":";;;;+BAmBA;;;eAAA;;;sEAlB0B;gCAEJ;+BACM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE5B,IAAA,AAAMA,kBAAN,MAAMA;IAGF,MAAaC,oBAAqC;QAC9C,OAAO,IAAI,CAACC,QAAQ,CAACC,IAAI;IAC7B;IAEA,MAAaC,eAAeC,YAA2B,EAAiB;QACpE,IAAIC,IAAAA,uBAAO,EAACD,eAAe,MAAM,IAAIE,4BAAa,CAAC,KAAK;QACxD,OAAO,IAAI,CAACL,QAAQ,CAACM,MAAM,CAAC,mBAAIH;IACpC;;QATA,uBAAOH,YAAWO,sBAAa;;AAUnC;MAEA,WAAeT"}