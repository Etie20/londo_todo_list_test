{"version":3,"sources":["../../../src/services/category.service.ts"],"sourcesContent":["import { Base } from \"@/interfaces/base.interface\";\r\nimport CategoryModel from \"@models/category.model\";\r\nimport {CreateBaseDto} from \"@dtos/state.dto\";\r\nimport {isEmpty} from \"class-validator\";\r\nimport {HttpException} from \"@exceptions/HttpException\";\r\n\r\nclass CategoryService {\r\n    public category = CategoryModel;\r\n\r\n    public async findAllCategories(): Promise<Base[]> {\r\n        return this.category.find();\r\n    }\r\n\r\n    public async createCategory(categoryData: CreateBaseDto): Promise<Base> {\r\n        if (isEmpty(categoryData)) throw new HttpException(400, \"categoryData is empty\");\r\n        return this.category.create({...categoryData})\r\n    }\r\n}\r\n\r\nexport default CategoryService;"],"names":["CategoryModel","isEmpty","HttpException","CategoryService","category","findAllCategories","find","createCategory","categoryData","create"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAOA,mBAAmB,yBAAyB;AAEnD,SAAQC,OAAO,QAAO,kBAAkB;AACxC,SAAQC,aAAa,QAAO,4BAA4B;AAExD,IAAA,AAAMC,gCAAN;;aAAMA;gCAAAA;QACF,uBAAOC,YAAWJ;;kBADhBG;;YAGWE,KAAAA;mBAAb,SAAaA;;uBAAb,oBAAA;;wBACI;;4BAAO,MAAKD,QAAQ,CAACE,IAAI;;;gBAC7B;;;;YAEaC,KAAAA;mBAAb,SAAaA,eAAeC,YAA2B;;uBAAvD,oBAAA;;wBACI,IAAIP,QAAQO,eAAe,MAAM,IAAIN,cAAc,KAAK;wBACxD;;4BAAO,MAAKE,QAAQ,CAACK,MAAM,CAAC,mBAAID;;;gBACpC;;;;WAVEL;;AAaN,eAAeA,gBAAgB"}