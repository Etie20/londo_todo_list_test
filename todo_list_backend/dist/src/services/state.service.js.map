{"version":3,"sources":["../../../src/services/state.service.ts"],"sourcesContent":["import stateModel from \"@models/state.model\";\r\nimport {Base} from \"@interfaces/base.interface\";\r\nimport {CreateBaseDto} from \"@dtos/state.dto\";\r\nimport {isEmpty} from \"class-validator\";\r\nimport {HttpException} from \"@exceptions/HttpException\";\r\n\r\nclass StateService {\r\n    public state = stateModel;\r\n\r\n    public async findAllState(): Promise<Base[]> {\r\n        return this.state.find();\r\n    }\r\n\r\n    public async createState(stateData: CreateBaseDto): Promise<Base> {\r\n        if (isEmpty(stateData)) throw new HttpException(400, \"stateData is empty\");\r\n        return this.state.create({...stateData});\r\n    }\r\n}\r\n\r\nexport default StateService;"],"names":["stateModel","isEmpty","HttpException","StateService","state","findAllState","find","createState","stateData","create"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,gBAAgB,sBAAsB;AAG7C,SAAQC,OAAO,QAAO,kBAAkB;AACxC,SAAQC,aAAa,QAAO,4BAA4B;AAExD,IAAA,AAAMC,6BAAN;;aAAMA;gCAAAA;QACF,uBAAOC,SAAQJ;;kBADbG;;YAGWE,KAAAA;mBAAb,SAAaA;;uBAAb,oBAAA;;wBACI;;4BAAO,MAAKD,KAAK,CAACE,IAAI;;;gBAC1B;;;;YAEaC,KAAAA;mBAAb,SAAaA,YAAYC,SAAwB;;uBAAjD,oBAAA;;wBACI,IAAIP,QAAQO,YAAY,MAAM,IAAIN,cAAc,KAAK;wBACrD;;4BAAO,MAAKE,KAAK,CAACK,MAAM,CAAC,mBAAID;;;gBACjC;;;;WAVEL;;AAaN,eAAeA,aAAa"}