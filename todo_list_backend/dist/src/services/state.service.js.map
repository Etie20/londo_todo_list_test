{"version":3,"sources":["../../../src/services/state.service.ts"],"sourcesContent":["import stateModel from \"@models/state.model\";\r\nimport {Base} from \"@interfaces/base.interface\";\r\nimport {CreateBaseDto} from \"@dtos/state.dto\";\r\nimport {isEmpty} from \"class-validator\";\r\nimport {HttpException} from \"@exceptions/HttpException\";\r\n\r\nclass StateService {\r\n    public state = stateModel;\r\n\r\n    public async findAllState(): Promise<Base[]> {\r\n        return this.state.find();\r\n    }\r\n\r\n    public async createState(stateData: CreateBaseDto): Promise<Base> {\r\n        if (isEmpty(stateData)) throw new HttpException(400, \"stateData is empty\");\r\n        return this.state.create({...stateData});\r\n    }\r\n}\r\n\r\nexport default StateService;"],"names":["StateService","findAllState","state","find","createState","stateData","isEmpty","HttpException","create","stateModel"],"mappings":";;;;+BAmBA;;;eAAA;;;mEAnBuB;gCAGD;+BACM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE5B,IAAA,AAAMA,eAAN,MAAMA;IAGF,MAAaC,eAAgC;QACzC,OAAO,IAAI,CAACC,KAAK,CAACC,IAAI;IAC1B;IAEA,MAAaC,YAAYC,SAAwB,EAAiB;QAC9D,IAAIC,IAAAA,uBAAO,EAACD,YAAY,MAAM,IAAIE,4BAAa,CAAC,KAAK;QACrD,OAAO,IAAI,CAACL,KAAK,CAACM,MAAM,CAAC,mBAAIH;IACjC;;QATA,uBAAOH,SAAQO,mBAAU;;AAU7B;MAEA,WAAeT"}