{"version":3,"sources":["../../src/app.ts"],"sourcesContent":["import express from 'express';\r\nimport {CREDENTIALS, LOG_FORMAT, NODE_ENV, ORIGIN, PORT} from \"@config\";\r\nimport { connect, set, disconnect } from 'mongoose';\r\nimport { dbConnection } from '@databases';\r\nimport {Routes} from \"@interfaces/routes.interface\";\r\nimport helmet from 'helmet';\r\nimport hpp from 'hpp';\r\nimport cors from 'cors';\r\nimport compression from 'compression';\r\n\r\n\r\n\r\nclass App {\r\n    public app: express.Application;\r\n    public env: string;\r\n    public port: string | number;\r\n\r\n    constructor(routes: Routes[]) {\r\n        this.app = express();\r\n        this.env = NODE_ENV || 'development';\r\n        this.port = PORT || 3000;\r\n\r\n        this.connectToDatabase().then(() => {console.log(`MongoDB is ready ðŸ˜Ž`)});\r\n        this.initializeMiddlewares();\r\n        this.initializeRoutes(routes);\r\n    }\r\n\r\n    public listen() {\r\n        this.app.listen(this.port, () => {\r\n            console.log(`=================================`);\r\n            console.log(`======= ENV: ${this.env} =======`);\r\n            console.log(`ðŸš€ App listening on the port ${this.port}`);\r\n            console.log(`=================================`);\r\n        });\r\n    }\r\n\r\n    public async closeDatabaseConnection(): Promise<void> {\r\n        try {\r\n            await disconnect();\r\n            console.log('Disconnected from MongoDB');\r\n        } catch (error) {\r\n            console.error('Error closing database connection:', error);\r\n        }\r\n    }\r\n\r\n    public async connectToDatabase() {\r\n        if (this.env !== 'production') {\r\n            set('debug', true);\r\n        }\r\n\r\n        await connect(dbConnection.url);\r\n    }\r\n\r\n    private initializeRoutes(routes: Routes[]) {\r\n        routes.forEach(route => {\r\n            this.app.use('/api/v1/', route.router);\r\n        });\r\n    }\r\n\r\n    private initializeMiddlewares() {\r\n        this.app.use(cors({ origin: ORIGIN, credentials: CREDENTIALS }));\r\n        this.app.use(hpp());\r\n        this.app.use(helmet());\r\n        this.app.use(compression());\r\n        this.app.use(express.json());\r\n        this.app.use(express.urlencoded({ extended: true }));\r\n    }\r\n}\r\n\r\nexport default App;"],"names":["App","listen","app","port","console","log","env","closeDatabaseConnection","disconnect","error","connectToDatabase","set","connect","dbConnection","url","initializeRoutes","routes","forEach","route","use","router","initializeMiddlewares","cors","origin","ORIGIN","credentials","CREDENTIALS","hpp","helmet","compression","express","json","urlencoded","extended","constructor","NODE_ENV","PORT","then"],"mappings":";;;;+BAqEA;;;eAAA;;;gEArEoB;wBAC0C;0BACrB;2BACZ;+DAEV;4DACH;6DACC;oEACO;;;;;;;;;;;;;;;;;;;AAIxB,IAAA,AAAMA,MAAN,MAAMA;IAeKC,SAAS;QACZ,IAAI,CAACC,GAAG,CAACD,MAAM,CAAC,IAAI,CAACE,IAAI,EAAE;YACvBC,QAAQC,GAAG,CAAC,CAAC,iCAAiC,CAAC;YAC/CD,QAAQC,GAAG,CAAC,CAAC,aAAa,EAAE,IAAI,CAACC,GAAG,CAAC,QAAQ,CAAC;YAC9CF,QAAQC,GAAG,CAAC,CAAC,6BAA6B,EAAE,IAAI,CAACF,IAAI,CAAC,CAAC;YACvDC,QAAQC,GAAG,CAAC,CAAC,iCAAiC,CAAC;QACnD;IACJ;IAEA,MAAaE,0BAAyC;QAClD,IAAI;YACA,MAAMC,IAAAA,oBAAU;YAChBJ,QAAQC,GAAG,CAAC;QAChB,EAAE,OAAOI,OAAO;YACZL,QAAQK,KAAK,CAAC,sCAAsCA;QACxD;IACJ;IAEA,MAAaC,oBAAoB;QAC7B,IAAI,IAAI,CAACJ,GAAG,KAAK,cAAc;YAC3BK,IAAAA,aAAG,EAAC,SAAS;QACjB;QAEA,MAAMC,IAAAA,iBAAO,EAACC,uBAAY,CAACC,GAAG;IAClC;IAEQC,iBAAiBC,MAAgB,EAAE;QACvCA,OAAOC,OAAO,CAACC,CAAAA;YACX,IAAI,CAAChB,GAAG,CAACiB,GAAG,CAAC,YAAYD,MAAME,MAAM;QACzC;IACJ;IAEQC,wBAAwB;QAC5B,IAAI,CAACnB,GAAG,CAACiB,GAAG,CAACG,IAAAA,aAAI,EAAC;YAAEC,QAAQC,cAAM;YAAEC,aAAaC,mBAAW;QAAC;QAC7D,IAAI,CAACxB,GAAG,CAACiB,GAAG,CAACQ,IAAAA,YAAG;QAChB,IAAI,CAACzB,GAAG,CAACiB,GAAG,CAACS,IAAAA,eAAM;QACnB,IAAI,CAAC1B,GAAG,CAACiB,GAAG,CAACU,IAAAA,oBAAW;QACxB,IAAI,CAAC3B,GAAG,CAACiB,GAAG,CAACW,gBAAO,CAACC,IAAI;QACzB,IAAI,CAAC7B,GAAG,CAACiB,GAAG,CAACW,gBAAO,CAACE,UAAU,CAAC;YAAEC,UAAU;QAAK;IACrD;IAjDAC,YAAYlB,MAAgB,CAAE;QAJ9B,uBAAOd,OAAP,KAAA;QACA,uBAAOI,OAAP,KAAA;QACA,uBAAOH,QAAP,KAAA;QAGI,IAAI,CAACD,GAAG,GAAG4B,IAAAA,gBAAO;QAClB,IAAI,CAACxB,GAAG,GAAG6B,gBAAQ,IAAI;QACvB,IAAI,CAAChC,IAAI,GAAGiC,YAAI,IAAI;QAEpB,IAAI,CAAC1B,iBAAiB,GAAG2B,IAAI,CAAC;YAAOjC,QAAQC,GAAG,CAAC,CAAC,mBAAmB,CAAC;QAAC;QACvE,IAAI,CAACgB,qBAAqB;QAC1B,IAAI,CAACN,gBAAgB,CAACC;IAC1B;AA0CJ;MAEA,WAAehB"}