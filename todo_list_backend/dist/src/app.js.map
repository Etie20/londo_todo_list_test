{"version":3,"sources":["../../src/app.ts"],"sourcesContent":["import express from 'express';\r\nimport {NODE_ENV, PORT} from \"@config\";\r\nimport {logger} from \"@utils/logger\";\r\nimport { connect, set, disconnect } from 'mongoose';\r\nimport { dbConnection } from '@databases';\r\nimport {Routes} from \"@interfaces/routes.interface\";\r\n\r\nclass App {\r\n    public app: express.Application;\r\n    public env: string;\r\n    public port: string | number;\r\n\r\n    constructor(routes: Routes[]) {\r\n        this.app = express();\r\n        this.env = NODE_ENV || 'development';\r\n        this.port = PORT || 3000;\r\n\r\n        this.connectToDatabase();\r\n    }\r\n\r\n    public listen() {\r\n        this.app.listen(this.port, () => {\r\n            logger.info(`=================================`);\r\n            logger.info(`======= ENV: ${this.env} =======`);\r\n            logger.info(`ðŸš€ App listening on the port ${this.port}`);\r\n            logger.info(`=================================`);\r\n        });\r\n    }\r\n\r\n    public async closeDatabaseConnection(): Promise<void> {\r\n        try {\r\n            await disconnect();\r\n            console.log('Disconnected from MongoDB');\r\n        } catch (error) {\r\n            console.error('Error closing database connection:', error);\r\n        }\r\n    }\r\n\r\n    public async connectToDatabase() {\r\n        if (this.env !== 'production') {\r\n            set('debug', true);\r\n        }\r\n\r\n        await connect(dbConnection.url);\r\n    }\r\n\r\n    private initializeRoutes(routes: Routes[]) {\r\n        routes.forEach(route => {\r\n            this.app.use('/', route.router);\r\n        });\r\n    }\r\n}\r\n\r\nexport default App;"],"names":["express","NODE_ENV","PORT","logger","connect","set","disconnect","dbConnection","App","routes","app","env","port","connectToDatabase","listen","info","closeDatabaseConnection","error","console","log","url","initializeRoutes","forEach","route","use","router"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,aAAa,UAAU;AAC9B,SAAQC,QAAQ,EAAEC,IAAI,QAAO,UAAU;AACvC,SAAQC,MAAM,QAAO,gBAAgB;AACrC,SAASC,OAAO,EAAEC,GAAG,EAAEC,UAAU,QAAQ,WAAW;AACpD,SAASC,YAAY,QAAQ,aAAa;AAG1C,IAAA,AAAMC,oBAAD,AAAL;;aAAMA,IAKUC,MAAgB;gCAL1BD;QACF,uBAAOE,OAAP,KAAA;QACA,uBAAOC,OAAP,KAAA;QACA,uBAAOC,QAAP,KAAA;QAGI,IAAI,CAACF,GAAG,GAAGV;QACX,IAAI,CAACW,GAAG,GAAGV,YAAY;QACvB,IAAI,CAACW,IAAI,GAAGV,QAAQ;QAEpB,IAAI,CAACW,iBAAiB;;kBAVxBL;;YAaKM,KAAAA;mBAAP,SAAOA;;gBACH,IAAI,CAACJ,GAAG,CAACI,MAAM,CAAC,IAAI,CAACF,IAAI,EAAE;oBACvBT,OAAOY,IAAI,CAAE;oBACbZ,OAAOY,IAAI,CAAC,AAAC,gBAAwB,OAAT,MAAKJ,GAAG,EAAC;oBACrCR,OAAOY,IAAI,CAAC,AAAC,0CAAyC,OAAV,MAAKH,IAAI;oBACrDT,OAAOY,IAAI,CAAE;gBACjB;YACJ;;;YAEaC,KAAAA;mBAAb,SAAaA;uBAAb,oBAAA;wBAIaC;;;;;;;;;;gCAFL;;oCAAMX;;;gCAAN;gCACAY,QAAQC,GAAG,CAAC;;;;;;gCACPF;gCACLC,QAAQD,KAAK,CAAC,sCAAsCA;;;;;;;;;;;gBAE5D;;;;YAEaJ,KAAAA;mBAAb,SAAaA;;uBAAb,oBAAA;;;;gCACI,IAAI,MAAKF,GAAG,KAAK,cAAc;oCAC3BN,IAAI,SAAS;gCACjB;gCAEA;;oCAAMD,QAAQG,aAAaa,GAAG;;;gCAA9B;;;;;;gBACJ;;;;YAEQC,KAAAA;mBAAR,SAAQA,iBAAiBZ,MAAgB;;gBACrCA,OAAOa,OAAO,CAACC,SAAAA;oBACX,MAAKb,GAAG,CAACc,GAAG,CAAC,KAAKD,MAAME,MAAM;gBAClC;YACJ;;;WA3CEjB;;AA8CN,eAAeA,IAAI"}