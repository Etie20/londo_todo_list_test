{"version":3,"sources":["../../../src/controllers/state.controller.ts"],"sourcesContent":["import StateService from \"@services/state.service\";\r\nimport {NextFunction, Request, Response} from \"express\";\r\nimport {Base} from \"@interfaces/base.interface\";\r\n\r\nclass StateController {\r\n    public stateService = new StateService();\r\n\r\n    public getState = async (req: Request, res: Response, next: NextFunction) => {\r\n        try {\r\n            const findAllStatesData: Base[] = await this.stateService.findAllState();\r\n            res.status(200).json({ data: findAllStatesData, message: \"findAll\" })\r\n        } catch (error) {\r\n            next(error);\r\n        }\r\n    }\r\n\r\n    public createState = async (req: Request, res: Response, next: NextFunction) => {\r\n        try {\r\n            const stateData: Base = req.body;\r\n            const createStateData: Base = await this.stateService.createState(stateData);\r\n            res.status(200).json({ data: createStateData, message: \"create\" })\r\n        } catch (error) {\r\n            next(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport default StateController;"],"names":["StateController","stateService","StateService","getState","req","res","next","findAllStatesData","findAllState","status","json","data","message","error","createState","stateData","body","createStateData"],"mappings":";;;;+BA2BA;;;eAAA;;;qEA3ByB;;;;;;;;;;;;;;;;;;;AAIzB,IAAA,AAAMA,kBAAN,MAAMA;;QACF,uBAAOC,gBAAe,IAAIC,qBAAY;QAEtC,uBAAOC,YAAW,OAAOC,KAAcC,KAAeC;YAClD,IAAI;gBACA,MAAMC,oBAA4B,MAAM,IAAI,CAACN,YAAY,CAACO,YAAY;gBACtEH,IAAII,MAAM,CAAC,KAAKC,IAAI,CAAC;oBAAEC,MAAMJ;oBAAmBK,SAAS;gBAAU;YACvE,EAAE,OAAOC,OAAO;gBACZP,KAAKO;YACT;QACJ;QAEA,uBAAOC,eAAc,OAAOV,KAAcC,KAAeC;YACrD,IAAI;gBACA,MAAMS,YAAkBX,IAAIY,IAAI;gBAChC,MAAMC,kBAAwB,MAAM,IAAI,CAAChB,YAAY,CAACa,WAAW,CAACC;gBAClEV,IAAII,MAAM,CAAC,KAAKC,IAAI,CAAC;oBAAEC,MAAMM;oBAAiBL,SAAS;gBAAS;YACpE,EAAE,OAAOC,OAAO;gBACZP,KAAKO;YACT;QACJ;;AACJ;MAEA,WAAeb"}