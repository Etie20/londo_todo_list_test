{"version":3,"sources":["../../../src/controllers/task.controller.ts"],"sourcesContent":["import TaskService from \"@services/task.service\";\r\nimport {NextFunction, Request, Response} from \"express\";\r\nimport {Task} from \"@interfaces/task.interface\";\r\nimport {SECRET_KEY} from \"@config\";\r\nimport {verify} from \"jsonwebtoken\";\r\nimport {DataStoredInToken} from \"@interfaces/auth.interface\";\r\n\r\nclass TaskController {\r\n    public taskService = new TaskService();\r\n\r\n    public getTasks = async (req: Request, res: Response, next: NextFunction) => {\r\n        try {\r\n            const Authorization = req.header('Authorization').split('Bearer ')[1];\r\n\r\n            const secretKey: string = SECRET_KEY;\r\n            const verificationResponse = verify(Authorization, secretKey) as DataStoredInToken;\r\n            const userId = verificationResponse._id;\r\n            const findAllTasksData: Task[] = await this.taskService.findAllTask(userId);\r\n            res.status(200).json({ data: findAllTasksData, message: \"findAll\"});\r\n        } catch (error) {\r\n            next(error);\r\n        }\r\n    }\r\n\r\n    public createTask = async (req: Request, res: Response, next: NextFunction) => {\r\n        try {\r\n            const createTaskData: Task = await this.taskService.createTask(req.body);\r\n            res.status(200).json({ data: createTaskData, message: \"create\" });\r\n        } catch (error) {\r\n            next(error);\r\n        }\r\n    }\r\n\r\n    public deleteTask = async (req: Request, res: Response, next: NextFunction) => {\r\n        try {\r\n            await this.taskService.deleteTask(req.params.id);\r\n            res.status(200).json({ message: \"delete\" })\r\n        } catch (error) {\r\n            next(error)\r\n        }\r\n    }\r\n\r\n    public updateTask = async (req: Request, res: Response, next: NextFunction) => {\r\n        try {\r\n            const updateTaskData: Task = await this.taskService.updateTask(req.params.id, req.body);\r\n            res.status(200).json({ data: updateTaskData, message: \"update\"});\r\n        } catch (error) {\r\n            next(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport default TaskController;"],"names":["TaskService","SECRET_KEY","verify","TaskController","taskService","getTasks","req","res","next","Authorization","secretKey","verificationResponse","userId","findAllTasksData","error","header","split","_id","findAllTask","status","json","data","message","createTask","createTaskData","body","deleteTask","params","id","updateTask","updateTaskData"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,iBAAiB,yBAAyB;AAGjD,SAAQC,UAAU,QAAO,UAAU;AACnC,SAAQC,MAAM,QAAO,eAAe;AAGpC,IAAA,AAAMC,iBAAN,SAAMA;;4BAAAA;;IACF,uBAAOC,eAAc,IAAIJ;IAEzB,uBAAOK;mBAAW,oBAAA,SAAOC,KAAcC,KAAeC;gBAExCC,eAEAC,WACAC,sBACAC,QACAC,kBAEDC;;;;;;;;;;wBAPCL,gBAAgBH,IAAIS,MAAM,CAAC,iBAAiBC,KAAK,CAAC,UAAU,CAAC,EAAE;wBAE/DN,YAAoBT;wBACpBU,uBAAuBT,OAAOO,eAAeC;wBAC7CE,SAASD,qBAAqBM,GAAG;wBACN;;4BAAM,MAAKb,WAAW,CAACc,WAAW,CAACN;;;wBAA9DC,mBAA2B;wBACjCN,IAAIY,MAAM,CAAC,KAAKC,IAAI,CAAC;4BAAEC,MAAMR;4BAAkBS,SAAS;wBAAS;;;;;;wBAC5DR;wBACLN,KAAKM;;;;;;;;;;;QAEb;wBAZyBR,KAAcC,KAAeC;;;;IActD,uBAAOe;mBAAa,oBAAA,SAAOjB,KAAcC,KAAeC;gBAE1CgB,gBAEDV;;;;;;;;;;wBAFwB;;4BAAM,MAAKV,WAAW,CAACmB,UAAU,CAACjB,IAAImB,IAAI;;;wBAAjED,iBAAuB;wBAC7BjB,IAAIY,MAAM,CAAC,KAAKC,IAAI,CAAC;4BAAEC,MAAMG;4BAAgBF,SAAS;wBAAS;;;;;;wBAC1DR;wBACLN,KAAKM;;;;;;;;;;;QAEb;wBAP2BR,KAAcC,KAAeC;;;;IASxD,uBAAOkB;mBAAa,oBAAA,SAAOpB,KAAcC,KAAeC;gBAI3CM;;;;;;;;;;wBAFL;;4BAAM,MAAKV,WAAW,CAACsB,UAAU,CAACpB,IAAIqB,MAAM,CAACC,EAAE;;;wBAA/C;wBACArB,IAAIY,MAAM,CAAC,KAAKC,IAAI,CAAC;4BAAEE,SAAS;wBAAS;;;;;;wBACpCR;wBACLN,KAAKM;;;;;;;;;;;QAEb;wBAP2BR,KAAcC,KAAeC;;;;IASxD,uBAAOqB;mBAAa,oBAAA,SAAOvB,KAAcC,KAAeC;gBAE1CsB,gBAEDhB;;;;;;;;;;wBAFwB;;4BAAM,MAAKV,WAAW,CAACyB,UAAU,CAACvB,IAAIqB,MAAM,CAACC,EAAE,EAAEtB,IAAImB,IAAI;;;wBAAhFK,iBAAuB;wBAC7BvB,IAAIY,MAAM,CAAC,KAAKC,IAAI,CAAC;4BAAEC,MAAMS;4BAAgBR,SAAS;wBAAQ;;;;;;wBACzDR;wBACLN,KAAKM;;;;;;;;;;;QAEb;wBAP2BR,KAAcC,KAAeC;;;;;AAU5D,eAAeL,eAAe"}